<?xml version="1.0" encoding="utf-8"?>
<!---An simple interface that shows a dropdown array that shows a filter dialog box when the user clicks on the down arrow. See FilterUI2 for code documentation.-->
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" keyDown="canvas1_keyDownHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:Canvas width="100%">
		<s:ToggleButton click="toggleFilterDialog(event)" width="18" height="18" id="button" skinClass="wcmc.skins.FlexUIButtonSkin"/>
		<mx:Label text="{filter.label}" x="22" y="1"/>
		<mx:Image source="{EmbeddedImages.searchIcon}" id="clearImage" visible="{filter.filtered}" click="clearImage_clickHandler(event)" right="0" y="2" toolTip="{resourceManager.getString('myResources', 'TEXT51')}"/>
	</mx:Canvas>
	<fx:Script>
		<![CDATA[
			import mx.core.IFlexDisplayObject;
			import mx.managers.PopUpManager;
			import mx.managers.PopUpManagerChildList;
			
			import spark.core.IViewport;
			
			import wcmc.classes.EmbeddedImages;
			import wcmc.classes.Filter;
			import wcmc.classes.LookupValue;
			private var filterDialog:FilterDialog;
			private var filterDialogOpen:Boolean=false;
			[Bindable]public var filter:Filter;
			public var openSide:String="right";//left or right
			public var searchRowHeight:Number=18;
			protected function toggleFilterDialog(event:MouseEvent):void
			{
				if (filterDialogOpen)
				{
					PopUpManager.removePopUp(filterDialog as IFlexDisplayObject);
				}
				else
				{
					closeOtherFilterDialogs();
					filterDialog=new FilterDialog();
					PopUpManager.addPopUp(filterDialog as IFlexDisplayObject,parentApplication as DisplayObject,false,PopUpManagerChildList.POPUP);
					filterDialog.filter=filter;
					(openSide=="right") ? filterDialog.x=localToGlobal(new Point(button.x,button.y)).x : filterDialog.x=((localToGlobal(new Point(button.x+button.width,button.y)).x)-filterDialog.width);
					filterDialog.y=(localToGlobal(new Point(button.x,button.y)).y)+button.height-1;
					filterDialog.addEventListener("filterDialogClosed",filterDialogClosed);
				}
				filterDialogOpen=!filterDialogOpen;
			}
			protected function clearImage_clickHandler(event:MouseEvent):void
			{
				filter.clear(true);
				filter.filterCollection.getMatchingIDs();
			}
			private function filterDialogClosed(event:Event):void
			{
				filterDialog.removeEventListener("filterDialogClosed",filterDialogClosed);
				button.selected=false;
				filterDialogOpen=false;				
			}
			private function closeOtherFilterDialogs():void
			{
				for (var i:int =0; i<systemManager.popUpChildren.numChildren;i++)
				{
					var popup:DisplayObject=systemManager.popUpChildren.getChildAt(i);
					if (popup is FilterDialog)
					{
						(popup as FilterDialog).close(false);
					}
				}
			}
			protected function canvas1_keyDownHandler(event:KeyboardEvent):void
			{
				var index:Number=getIndexOfKey(event);
				if (index>-1)
				{
					filterDialog.list.ensureIndexIsVisible(index);
					var iViewport:IViewport=filterDialog.list.scroller.viewport;
					iViewport.verticalScrollPosition=index*searchRowHeight;
				}
			}
			private function getIndexOfKey(event:KeyboardEvent):Number
			{
				for each (var lookupValue:LookupValue in filter.lookupValues)
				{
					if (lookupValue.value.substr(0,1).toLowerCase()==numToChar(event.charCode).toLowerCase())
					{
						 return filter.lookupValues.getItemIndex(lookupValue);
					}
				}
				return -1;
			}
			private function numToChar(num:int):String { if (num > 47 && num < 58) {
				var strNums:String = "0123456789";
				return strNums.charAt(num - 48); } else if (num > 64 && num < 91) {
					var strCaps:String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
					return strCaps.charAt(num - 65); } else if (num > 96 && num < 123) {
						var strLow:String = "abcdefghijklmnopqrstuvwxyz";
						return strLow.charAt(num - 97); } else {
							return num.toString();
						}
			}			
		]]>
	</fx:Script>
</mx:Canvas>
